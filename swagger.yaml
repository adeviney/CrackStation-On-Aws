---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "CrackStationAPI"
  description: "The CrackStation API will return the plaintext password from its unsalted hash.
  
  
  Departing from convention, this API is labeled by its *minor* version number. The resources and methods are compatible between versions. They only differ in their implementation (and thus performance). 
  
  ### Version 1, paths preceded by `/v1/`
  
  * Don't use this version. It only exists for pedagogical and demonstrative purposes. 
  
  * Because of its implementation with Python and S3, this version is significantly slower than Version 2. 
  
  * While AWS documentation is not particularly forthcoming about how S3 Select is implemented, we might assume the time efficiency is around O(logn). To be sure, further tests on data sets of different sizes will have to be conducted.
  
  
  ### Version 2, paths preceded by `/v2/`
  
  * This implementation owes its performance gains to its use of a Lambda function written in Golang and DynamoDB.
  
  * Time efficency is linear, O(1), because each shaHash is its own partition key in the DynamoDB database.
  
  

"
host: "api.thecrackstation.com"
schemes:
- "https"
paths:
  /v1/password:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "400":
          description: "Invalid Request. Missing shaHash parameter."
  /v1/password/{shaHash}:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "shaHash"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK. Plaintext password is returned."
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "500":
          description: "Internal error."
        "404":
          description: "The requested hash could not be cracked. It is unknown to CrackStation."
  /v2/password:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "400":
          description: "Invalid Request. Missing shaHash parameter."
  /v2/password/{shaHash}:
    get:
      parameters:
      - name: "shaHash"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK. Plaintext password is returned."
        "400":
          description: "Invalid Request. Missing shaHash parameter."
        "500":
          description: "There is an internal error related to communication with DynamoDB."
        "404":
          description: "The requested hash could not be cracked. It is unknown to CrackStation."
